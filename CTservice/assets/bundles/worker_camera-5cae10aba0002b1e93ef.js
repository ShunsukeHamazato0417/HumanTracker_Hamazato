/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/worker_camera.js":
/*!************************************!*\
  !*** ./assets/js/worker_camera.js ***!
  \************************************/
/***/ (() => {

eval("\nconsole.log('WebWorker activate.');\n\nlet send_data;\nlet displaying;\nlet displaying_view;\nlet start = false;\nvar ws_req;\nvar now, data_t, lag;\n\n\nlet domain = 'ws://192.168.50.12:';\nlet port = '8082';\nlet ws_server;\nlet ws;\nlet ws_max_reconnect = 10;\nlet ws_try_reconnect = 0;\nlet ws_try_interval  = 0;\nlet interval = 1;\nlet ty;\n\nself.addEventListener('message', (req) => {\n  if (req.data.ty){\n    ty = req.data.ty;\n    ws_req = { \n\tty       : ty,\n        interval : interval \n    }\n    ws_server = domain + port;\n    ws_connect();\n  } else if (req.data.command){\n    if (req.data.command=='reconnect'){\n      ws.close();\n    } else if (req.data.command=='Forced reconnect'){\n      interval++;\n      ws_req = { ty : ty,\n                 interval : interval }\n      console.log(interval);\n      ws.close();\n    }\n  }\n});\n\n//console.log(location.href)\n\n/* ----- functions ----- */\nvar pre = new Date();\nvar fps;\n\nfunction ws_connect(){\n  ws = new WebSocket(ws_server);\n \n  ws.onopen = function(){\n    ws_try_reconnect = 0;\n    ws_try_interval  = 0;\n    ws.send(JSON.stringify(ws_req));\n    console.log(ws_req);\n    console.log('Connected to WebSocket server: ' + ws_server);\n  };\n  ws.onmessage = function(msg){\n    //var start = new Date();\n    var json = JSON.parse(msg.data);\n    console.log(json);\n    send_data = transformShareCordinate(json);\n    //var end = new Date();\n    //var tj = end.getTime() - start.getTime(); \n    //console.log('trans: ' + tj);\n    self.postMessage(send_data);\n    //var end2 = new Date();\n    //tj = end2.getTime() - end.getTime();\n    //console.log('send: ' + tj);\n\n    /*now = new Date();\n    data_t = to_date(send_data[1].time);\n    lag = now.getTime() - data_t.getTime();\n    console.log('lag: ' + lag);\n    fps = 1000 / (now.getTime() - pre.getTime());\n    console.log('fps: ' + fps);\n    pre = now;*/\n  };\n  ws.onclose = function incoming(event){\n    ws_try_reconnect++;\n    ws_try_interval++;\n    if (ws_try_reconnect <= 1){\n      console.log('Failed connecting to WebSocket server: ' + ws_server);\n    } else if (ws_try_reconnect >= ws_max_reconnect){\n      console.log('WebSocket server is down.');\n      return;\n    }\n    sleep(ws_try_interval);\n    console.log('Try Reconnecting: ' + ws_try_reconnect);\n    //console.log('ws close.event',event);\n    //console.log('ws.readyState',ws.readyState);\n    ws_connect();\n  };\n}\n\n\n/*function sendToMain(){\n  if (send_data!=null){\n    self.postMessage(send_data);\n  }\n}\nsetInterval(sendToMain, 1000/20);*/\n\n\nfunction sleep(a){\n  var dt1 = new Date().getTime();\n  var dt2 = new Date().getTime();\n  while (dt2 < dt1 + a*1000){\n    dt2 = new Date().getTime();\n  }\n  return;\n}\n\n\nfunction transformShareCordinate(json){\n  //var start = new Date();\n\n  var send = [];\n  // send.push(json[0]);\n  // for (var i=1; i<json.length; i++){\n  //   var data_tmp = [];\n  //   for (var j=0; j<json[i].det_hum.length; j++){\n  //     var tmp = [0,0];\n  //     tmp[0] = json[i].det_hum[j].x;\n  //     tmp[1] = json[i].det_hum[j].y;\n  //     data_tmp.push(tmp);\n  //   }\n  //   var sensor_tmp = {\n  //     \"num_cam\"   : json[i].num_cam,\n  //     \"det_time\"  : json[i].det_time,\n  //     \"data\"      : data_tmp\n  //   }\n  //   send.push(sensor_tmp);\n  // }\n\n  var data_tmp = [];\n  send.push(json);\n  for (var i=0; i<json.length; i++){\n    if(json[i]){\n      for (var j=0; j<json[i].data.length; j++){\n        var tmp = [0,0];\n        tmp[0] = json[i].data[j].x + 27380;\n        tmp[1] = json[i].data[j].y + 3260;\n        data_tmp.push(tmp);\n      }\n      var sensor_tmp = {\n        \"id\"   : json.num_cam,\n        \"det_time\"  : json.det_time,\n        \"data\"      : data_tmp\n      }\n      send.push(sensor_tmp);\n      console.log(send);\n    }\n    // for (var j=0; j<json.length; j++){\n    //   var tmp = [0,0];\n    //   tmp[0] = json[i].data[j].x;\n    //   tmp[1] = json[i].data[j].y;\n    //   data_tmp.push(tmp);\n    // }\n    // var sensor_tmp = {\n    //   \"id\"   : json.num_cam,\n    //   \"det_time\"  : json.det_time,\n    //   \"data\"      : data_tmp\n    // }\n  \n    // send.push(sensor_tmp);\n    // console.log(send);\n  }\n  /*var end = new Date();\n  var spend = end.getTime() - start.getTime();\n  console.log('spend: ' + spend);*/\n\n  return send;\n}\n\n\nfunction to_date (time){\n  // var pattern = new RegExp('([0-9]{4})/([0-9]{2})/([0-9]{2}).([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]{3})', 'g');\n  // var result = pattern.exec(time);\n  // var year = Number(result[1]);\n  // var mon  = Number(result[2]);\n  // var day  = Number(result[3]);\n  // var hour = Number(result[4]);\n  // var min  = Number(result[5]);\n  // var sec  = Number(result[6]);\n  // var mil  = Number(result[7]);\n\n  \n  var year = time.year;\n  var mon  = time.mon;\n  var day  = time.day;\n  var hour = time.hour;\n  var min  = time.min;\n  var sec  = time.sec;\n  var mil  = time.misec;\n\n  var t_result = new Date(year, mon-1, day, hour, min, sec, mil);\n  return t_result;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/worker_camera.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./assets/js/worker_camera.js"]();
/******/ 	
/******/ })()
;